#Determine the factors of a number (i.e., all positive integer values that evenly divide into a number).
k=int(input())

l=[]

for i in range(1,k+1):

    if(k%i==0):

        l.append(i)

for j in l:

    print(j,end=' ')

#Write a program to find the count of non-repeated digits in a given number N. The number will be passed to the program as an input of type int.
n=int(input())

l=[]

k=[]

while n>0:

    a=n%10

    n=n//10

    l.append(a)

for i in range(len(l)):

    if l.count(l[i])==1:

        k.append(l[i])

print(len(k))

#Write a program that finds whether the given number N is Prime or not. If the number is prime, the program should return 2 else it must return 1.
a=int(input())

for i in range(2,a):

    if(a%2==0):

        flag=0

    elif(a%i!=0):

        flag=1

    else:

        flag=0

if(flag==1):

    print("2")

elif(flag==0):

    print("1")

#Given a number N, find the next perfect square greater than N.
a=int(input())

c=[]

for i in range(0,a):

    b=i**2

    if(b>a):

        c.append(b)

print(c[0])

#Write a program to return the nth number in the fibonacci series. The value of N will be passed to the program as input.

a=[0,1]

for i in range(0,100):

    a.append(a[-1]+a[-2])

q=int(input())

print(a[q-1])
#A Number is said to be Disarium number when the sum of its digit raised to the power of their respective positions becomes equal to the number itself. Write a program to print number is Disarium or not.
import math

n=int(input())

a=len(str(n))

sum=0

x=n

while(x!=0):

    r=x%10

    sum=int(sum+math.pow(r,a))

    a-=1

    x=x//10

if(sum==n):

    print("Yes")

else:

    print("No")
#Write a program to find the sum of the series 1 +11 + 111 + 1111 + . . . + n terms (n will be given as input from the user and sum will be the output)
n=int(input())

b=1

sum=0

for i in range(1,n+1):

    sum+=b

    b=(b*10)+1

print(sum)

#Write a program to find the count of unique digits in a given number N. The number will be passed to the program as an input of type int.
a=int(input())

b=[]

while a>0:

    c=a%10

    a=a//10

    b.append(c)

b=list(set(b))

print(len(b))

#Given a positive integer N, check whether it can be represented as a product of single digit numbers.
a=int(input())

flag=0

for i in range(10):

    for j in range(10):

        if(i*j==a):

            flag=1

            break

if(flag==1):

    print("Yes")

else:

    print("No")
#Given an integer N, check whether N the given number can be made a perfect square after adding 1 to it.
import math

n=int(input())

a=n+1

sr=int(math.sqrt(a))

if(sr*sr==a):

    print("Yes")

else:

    print("No")

#

